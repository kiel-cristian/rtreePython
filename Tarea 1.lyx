#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
\usepackage{fancyhdr}
\pagestyle{fancy}
\lfoot{\thepage}
\end_preamble
\options tablecaptionabove 
\use_default_options true
\begin_modules
theorems-ams
customHeadersFooters
tabs-within-sections
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language spanish-mexico
\language_package babel
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Left Header

\lang spanish
CC4102 - Diseño y análisis de algoritmos
\end_layout

\begin_layout Right Header

\lang spanish
Tarea 1
\end_layout

\begin_layout Left Footer

\lang spanish
DCC, Universidad de Chile
\end_layout

\begin_layout Titlehead

\lang spanish
\begin_inset Graphics
	filename E:/Injeniería/Cosas/Logos/dcc_big_trans.png
	lyxscale 10
	scale 20

\end_inset


\end_layout

\begin_layout Subject

\lang spanish
Tarea 1
\end_layout

\begin_layout Title

\lang spanish
Inserción y busqueda en 
\begin_inset Formula $R-Tree$
\end_inset

 y 
\begin_inset Formula $R^{+}-Tree$
\end_inset


\end_layout

\begin_layout Author

\lang spanish
Ian Yon Yon
\begin_inset Newline newline
\end_inset

Cristián Carreño
\end_layout

\begin_layout Subtitle

\lang spanish
CC4102 - Diseño y análisis de algoritmos
\end_layout

\begin_layout Publishers

\lang spanish
Profesor: Gonzalo Navarro
\begin_inset Newline linebreak
\end_inset

Auxiliar: Teresa Bracamonte
\end_layout

\begin_layout Chapter

\lang spanish
Introducción 
\end_layout

\begin_layout Section

\lang spanish
\begin_inset Formula $R-Tree$
\end_inset

 y 
\begin_inset Formula $R^{+}-Tree$
\end_inset


\end_layout

\begin_layout Standard

\lang spanish
Se implementaron los 2 tipos de árboles con la siguiente jerarquía de clases:
\end_layout

\begin_layout Itemize

\lang spanish
RtreeApi
\end_layout

\begin_deeper
\begin_layout Itemize

\lang spanish
Rtree
\end_layout

\begin_layout Itemize

\lang spanish
RtreePlus
\end_layout

\end_deeper
\begin_layout Standard

\lang spanish
Esto permite manejar de forma adecuada los métodos comunes a ambos arboles
 y los métodos que los diferencian, como la inserción.
 Para los elementos del árbol, estos son miembros de la siguiente estructura:
\end_layout

\begin_layout Itemize

\lang spanish
MRtree
\end_layout

\begin_deeper
\begin_layout Itemize

\lang spanish
MNode
\end_layout

\begin_layout Itemize

\lang spanish
MLeaf
\end_layout

\end_deeper
\begin_layout Standard

\lang spanish
Para manejar el acceso a memoria secundaria, RtreeApi se comunica con la
 clase RtreeFileHandler, que hace todas las lecturas y escrituras en memoria,
 en archivos binarios.
 Se accede a la información del árbol guardado en el archivo ya que se mantiene
 el offset desde el que empieza un nodo y una hoja, y ambos tienen un largo
 fijo.
 Además siempre se mantiene la raíz en la primera posición del archivo.
\end_layout

\begin_layout Standard

\lang spanish
De la misma forma que los árboles se manejan los 2 tipos de particionamiento:
\end_layout

\begin_layout Itemize

\lang spanish
PartitionAlgorithm
\end_layout

\begin_deeper
\begin_layout Itemize

\lang spanish
LinealPartition
\end_layout

\begin_layout Itemize

\lang spanish
CuadraticPartition
\end_layout

\end_deeper
\begin_layout Standard

\lang spanish
Para la selección de semillas en el caso lineal se eligen como candidatos
 a los que están en el borde del MBR padre, y luego se calculan los más
 alejados entre ellos.
\end_layout

\begin_layout Standard

\lang spanish
Para la selección del nodo en el que se insertará el nuevo elemento se usa
 la siguiente estructura:
\end_layout

\begin_layout Itemize

\lang spanish
SelectionManager
\end_layout

\begin_deeper
\begin_layout Itemize

\lang spanish
RtreeSelection
\end_layout

\begin_layout Itemize

\lang spanish
RtreePlusSelection
\end_layout

\end_deeper
\begin_layout Standard
Donde hay una para cada tipo de árbol, y en el caso del Rtree entrega un
 elemento, mientras que para el RtreePlus entrega una lista de elementos
 que intersectan con el nuevo.
\end_layout

\begin_layout Chapter

\lang spanish
Experimentos
\end_layout

\begin_layout Section
Inserción
\end_layout

\begin_layout Subsection
\begin_inset Formula $R-Tree$
\end_inset


\end_layout

\begin_layout Subsubsection
Resultados
\end_layout

\begin_layout Standard
Se probó la inserción en el árbol considerando 100.000 elementos a insertar,
 y variando la dimensión de los elementos en 
\begin_inset Formula $d=\{2,\,4,\,8,\,16\}$
\end_inset

 y la capacidad máxima de los nodos entre 
\begin_inset Formula $M=\{50,\,100\}$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Análisis
\end_layout

\begin_layout Standard
E
\end_layout

\begin_layout Subsection
\begin_inset Formula $R^{+}-Tree$
\end_inset


\end_layout

\begin_layout Subsubsection
Resultados
\end_layout

\begin_layout Standard
Se probó la inserción en el árbol considerando 100.000 elementos a insertar,
 y variando la dimensión de los elementos en 
\begin_inset Formula $d=\{2,\,4,\,8,\,16\}$
\end_inset

 y la capacidad máxima de los nodos 
\begin_inset Formula $M=100$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Análisis
\end_layout

\begin_layout Standard
E
\end_layout

\begin_layout Section
Búsqueda
\end_layout

\begin_layout Subsection
\begin_inset Formula $R-Tree$
\end_inset


\end_layout

\begin_layout Subsubsection
Resultados
\end_layout

\begin_layout Standard
Se probó la búsqueda en el árbol realizando consultas en grupos de 
\begin_inset Formula $Q=\{1000,\,2000,\,3000,\,4000,\,5000\}$
\end_inset

 y un radio de consulta entre 
\begin_inset Formula $r=\{0.25,\,0.5,\,0.75\}$
\end_inset

 por-ciento de la raíz de la dimensión.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Análisis
\end_layout

\begin_layout Standard
E
\end_layout

\begin_layout Subsection
\begin_inset Formula $R^{+}-Tree$
\end_inset


\end_layout

\begin_layout Subsubsection
Resultados
\end_layout

\begin_layout Standard
Se probó la búsqueda en el árbol realizando consultas en grupos de 
\begin_inset Formula $Q=\{1000,\,2000,\,3000,\,4000,\,5000\}$
\end_inset

 y un radio de consulta entre 
\begin_inset Formula $r=\{0.25,\,0.5,\,0.75\}$
\end_inset

 por-ciento de la raíz de la dimensión.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Análisis
\end_layout

\begin_layout Standard
E
\end_layout

\begin_layout Chapter

\lang spanish
Conclusiones
\end_layout

\begin_layout Standard

\lang spanish
parámetros que fijar en el entrenamiento de RNA.
 En este trabajo se dejaron fijos las implementaciones de BackPropagation
 y la función de activación sin embargo hay varias opciones para elegir
 entre estas, cada una para determinados tipos de problemas y con sus caracterís
ticas particulares.
 El algoritmo usado 
\begin_inset Quotes eld
\end_inset

trainlm
\begin_inset Quotes erd
\end_inset

 es bastante rápido por lo que sirve para comparar diferentes redes, y la
 función de activación 
\begin_inset Quotes eld
\end_inset

tansig
\begin_inset Quotes erd
\end_inset

 sirve para valores positivos y negativos, mientras que 
\begin_inset Quotes eld
\end_inset

logsig
\begin_inset Quotes erd
\end_inset

 solo para valores positivos.
 En un comienzo se probo con 
\begin_inset Quotes eld
\end_inset

logsig
\begin_inset Quotes erd
\end_inset

 pero no se obtenían buenos resultados porque algunos de los elementos del
 vector de características son cero.
\end_layout

\begin_layout Standard

\lang spanish
Matlab proporciona un sinnúmero de herramientas para el entrenamiento de
 redes neuronales de diferentes tipos y con diferentes propósitos, y también
 provee una interfaz gráfica para estos, que facilita la comprensión del
 pro
\end_layout

\end_body
\end_document
